# OpenTelemetry Collector Configuration for Ollama Pro Testing

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "http://localhost:*"
            - "https://localhost:*"
            - "*"
  
  # Host metrics for system monitoring
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
      disk:
        metrics:
          system.disk.io:
            enabled: true
      network:
        metrics:
          system.network.io:
            enabled: true

processors:
  # Batch traces and metrics for efficiency
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048
  
  # Memory limiter to prevent OOM
  memory_limiter:
    limit_mib: 512
    spike_limit_mib: 128
    check_interval: 5s
  
  # Resource processor to add consistent attributes
  resource:
    attributes:
      - key: service.namespace
        value: "ollama-pro"
        action: upsert
      - key: service.instance.id
        value: "${HOSTNAME}"
        action: upsert
      - key: deployment.environment
        value: "test"
        action: upsert
  
  # Attribute processor for enhanced metadata
  attributes/enhance:
    actions:
      - key: test.suite
        value: "ollama-pro"
        action: upsert
      - key: test.timestamp
        value: "${OTEL_TIMESTAMP}"
        action: upsert

exporters:
  # Jaeger for trace visualization
  jaeger:
    endpoint: http://localhost:14250
    tls:
      insecure: true
  
  # Prometheus for metrics
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: ollama_pro
    const_labels:
      environment: test
  
  # Console output for debugging
  logging:
    loglevel: debug
    sampling_initial: 5
    sampling_thereafter: 200
  
  # File exporter for test verification
  file:
    path: ./telemetry-data/traces.json
    rotation:
      max_megabytes: 100
      max_days: 7
      max_backups: 3
  
  # File exporter for metrics
  file/metrics:
    path: ./telemetry-data/metrics.json
    rotation:
      max_megabytes: 100
      max_days: 7
      max_backups: 3

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  
  pprof:
    endpoint: 0.0.0.0:1777
  
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, attributes/enhance, batch]
      exporters: [jaeger, logging, file]
    
    metrics:
      receivers: [otlp, hostmetrics]
      processors: [memory_limiter, resource, attributes/enhance, batch]
      exporters: [prometheus, logging, file/metrics]
  
  # Telemetry for the collector itself
  telemetry:
    logs:
      level: "debug"
    metrics:
      address: 0.0.0.0:8888
      level: detailed